# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/06_callback.ipynb (unless otherwise specified).

__all__ = ['RCNNCallback']

# Cell
from .all import *

# Cell
class RCNNCallback(Callback):
    def begin_batch(self):
        if self.inference: return
        assert len(self.xb)==len(self.yb)==1, 'Only works for single input-output'
        self.learn.xb = (self.xb[0], self.yb[0].tolist())
    def after_loss(self):
        if self.inference: return
        if not self.training: return # TODO: https://github.com/lgvaz/mantisshrimp/issues/1
        self.learn.loss = torch.stack([l for l in self.pred.values()]).mean()